// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/anapaya/bwallocation/proto/bw_allocation/v1 (interfaces: BandwithAllocationServiceServer)

// Package mock_v1 is a generated GoMock package.
package mock_v1

import (
	context "context"
	v1 "github.com/anapaya/bwallocation/proto/bw_allocation/v1"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBandwithAllocationServiceServer is a mock of BandwithAllocationServiceServer interface
type MockBandwithAllocationServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockBandwithAllocationServiceServerMockRecorder
}

// MockBandwithAllocationServiceServerMockRecorder is the mock recorder for MockBandwithAllocationServiceServer
type MockBandwithAllocationServiceServerMockRecorder struct {
	mock *MockBandwithAllocationServiceServer
}

// NewMockBandwithAllocationServiceServer creates a new mock instance
func NewMockBandwithAllocationServiceServer(ctrl *gomock.Controller) *MockBandwithAllocationServiceServer {
	mock := &MockBandwithAllocationServiceServer{ctrl: ctrl}
	mock.recorder = &MockBandwithAllocationServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBandwithAllocationServiceServer) EXPECT() *MockBandwithAllocationServiceServerMockRecorder {
	return m.recorder
}

// Reserve mocks base method
func (m *MockBandwithAllocationServiceServer) Reserve(arg0 context.Context, arg1 *v1.ReserveRequest) (*v1.ReserveResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Reserve", arg0, arg1)
	ret0, _ := ret[0].(*v1.ReserveResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Reserve indicates an expected call of Reserve
func (mr *MockBandwithAllocationServiceServerMockRecorder) Reserve(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Reserve", reflect.TypeOf((*MockBandwithAllocationServiceServer)(nil).Reserve), arg0, arg1)
}
